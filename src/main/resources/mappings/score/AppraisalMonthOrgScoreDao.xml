<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.boco.modules.fdoc.dao.score.AppraisalMonthOrgScoreDao">
	 <sql id="Base_Column_List" >
	    id, org_id, sign_increment, family_increment, sign_hyper_score, sign_diabetes_score, 
	    sign_phychosis_score, sign_old_score, sign_maternal_score, sign_children_score, sign_manage_score, 
	    public_health_hyper_score, public_health_diabetes_score, public_health_phychosis_score, 
	    public_health_old_score, public_health_maternal_score, public_health_children_score, 
	    public_health_score, health_manage_edu_score, health_manage_daily_activity_score, 
	    health_manage_assessment_score, health_manage_document_score, health_manage_score, 
	    customer_score, result_score, team_total, un_qualified_increment, qualified_increment, 
	    excellent_increment, month, create_time
	  </sql>
	  <!-- 根据月份获取机构当月信息 -->
	  <select id="getAppraisalMonthOrgScoreByMonth" parameterType="com.boco.modules.fdoc.model.score.AppraisalMonthOrgScoreEntity" resultType="com.boco.modules.fdoc.vo.AppraisalMonthOrgScoreVo">
	   	SELECT
			a.team_total,
			a.un_qualified_increment,
			a.qualified_increment,
			a.excellent_increment,
			a.sign_increment,
			a.family_increment,
			a.result_score,
			f.address org_address,
			f.org_name,
			(SELECT
				COUNT(DISTINCT a.person_id)
				FROM
					t_person_desease_info a,
					t_person_information b,
					t_user_doc_sign c,
					t_doctor d,
					t_appraisal_month_org_score e
				WHERE
					a.person_id = b.person_id
				AND b.family_id = c.family_id
				AND c.doc_team_id = d.team_id
				and e.org_id =d.org_id
				<if test="orgId != null  and orgId != ''">
			    	and d.org_id=#{orgId}
			    </if>
				 <if test="month != null  and month != ''">
				  and  date_format(a.create_time, '%Y%m') = #{month}					 
				</if>
				AND( a.adult_flag = '1'
				OR a.child_flag = '1'
				OR a.diabetes_flag = '1'
				OR a.hyper_flag = '1'
				OR a.major_psychosis_flag = '1'
				OR a.maternal_flag = '1'
				OR a.oldm_flag ='1')) chronic_disease_number
			FROM
				t_appraisal_month_org_score a,
				t_hospital f
			WHERE
				a.org_id = f.id
			<if test="orgId != null  and orgId != ''">
			    and a.org_id=#{orgId}
			</if>
			<if test="month != null  and month != ''">
				and a.month=#{month}
			</if>		 
	   	
 
	  </select>
	  <!-- 根据月份获取机构列表 -->
	  <select id="getAppraisalMonthOrgScoreListByMonth" parameterType="string" resultType="com.boco.modules.fdoc.vo.AppraisalMonthOrgScoreVo">	  
		 SELECT
			a.org_id, a.sign_increment, a.family_increment, a.sign_hyper_score, a.sign_diabetes_score, 
		    a.sign_phychosis_score, a.sign_old_score, a.sign_maternal_score, a.sign_children_score, a.sign_manage_score, 
		    a.public_health_hyper_score, a.public_health_diabetes_score, a.public_health_phychosis_score, 
		    a.public_health_old_score, a.public_health_maternal_score, a.public_health_children_score, 
		    a.public_health_score, a.health_manage_edu_score, a.health_manage_daily_activity_score, 
		    a.health_manage_assessment_score, a.health_manage_document_score, a.health_manage_score, 
		    a.customer_score, a.result_score, a.team_total, a.un_qualified_increment, a.qualified_increment, 
		    a.excellent_increment, a.month, a.create_time,b.org_name
		 FROM
			t_appraisal_month_org_score a,
			t_hospital b
		 WHERE
			a.org_id = b.id
		 and a.`month` =#{0}
	  </select>
	  <!--根据月份获取所有医疗机构总数 -->
	  <select id="getOrganizationScoreListCount" parameterType="com.boco.modules.fdoc.vo.AppraisalMonthOrgScoreVo" resultType="integer">	  
	   SELECT
			count(a.org_id )		    
		 FROM
			t_appraisal_month_org_score a,
			t_hospital b
		 WHERE
			a.org_id = b.id
		<if test="month != null  and month != ''">
			and a.month=#{month}
		</if>	
		<if test="orgId != null  and orgId != ''">
			and a.org_id=#{orgId}
		</if>
	  </select>
	  <!-- 根据月份获取所有医疗机构 -->
	  <select id="getOrganizationScoreList" parameterType="com.boco.modules.fdoc.vo.AppraisalMonthOrgScoreVo" resultType="com.boco.modules.fdoc.vo.AppraisalMonthOrgScoreVo">	  
	   SELECT
			a.org_id, a.sign_increment, a.family_increment, a.sign_hyper_score, a.sign_diabetes_score, 
		    a.sign_phychosis_score, a.sign_old_score, a.sign_maternal_score, a.sign_children_score, a.sign_manage_score, 
		    a.public_health_hyper_score, a.public_health_diabetes_score, a.public_health_phychosis_score, 
		    a.public_health_old_score, a.public_health_maternal_score, a.public_health_children_score, 
		    a.public_health_score, a.health_manage_edu_score, a.health_manage_daily_activity_score, 
		    a.health_manage_assessment_score, a.health_manage_document_score, a.health_manage_score, 
		    a.customer_score, a.result_score, a.team_total, a.un_qualified_increment, a.qualified_increment, 
		    a.excellent_increment, a.month, a.create_time,b.org_name
		 FROM
			t_appraisal_month_org_score a,
			t_hospital b
		 WHERE
			a.org_id = b.id
		 <if test="month != null  and month != ''">
			and a.month=#{month}
		</if>	
		<if test="orgId != null  and orgId != ''">
			and a.org_id=#{orgId}
		</if>
	  </select>
	  <!-- 获取指定机构的实力 -->
	  <select id="getAppraisalMonthOrgScoreByOrgId" parameterType="string" resultType="com.boco.modules.fdoc.vo.AppraisalMonthOrgScoreVo">	  
	  SELECT
			AVG(a.sign_hyper_score) sign_hyper_score,
			AVG(a.sign_diabetes_score) sign_diabetes_score,
			AVG(a.sign_phychosis_score) sign_phychosis_score,
			AVG(a.sign_old_score) sign_old_score,
			AVG(a.sign_maternal_score) sign_maternal_score,
			AVG(a.sign_children_score) sign_children_score,
			AVG(a.sign_manage_score) sign_manage_score,
			AVG(a.public_health_hyper_score) public_health_hyper_score,
			AVG(a.public_health_diabetes_score) public_health_diabetes_score,
			AVG(a.public_health_phychosis_score) public_health_phychosis_score,
			AVG(a.public_health_old_score) public_health_old_score,
			AVG(a.public_health_maternal_score) public_health_maternal_score,
			AVG(a.public_health_children_score) public_health_children_score,
			AVG(a.public_health_score) public_health_score,
		    AVG(a.health_manage_edu_score) health_manage_edu_score,
			AVG(a.health_manage_daily_activity_score) health_manage_daily_activity_score,
			AVG(a.health_manage_assessment_score) health_manage_assessment_score,
			AVG(a.health_manage_document_score) health_manage_document_score,
			AVG(a.health_manage_score) health_manage_score,
			AVG(a.customer_score) customer_score
		FROM
			t_appraisal_month_org_score a	 
		WHERE
        a.org_id=#{0}
	  </select>
	  
	  
	  <!--新增数据-->
	  <insert id="insert" parameterType="com.boco.modules.fdoc.model.score.AppraisalMonthOrgScoreEntity" >
	    insert into t_appraisal_month_org_score (org_id, sign_increment, 
	      family_increment, sign_hyper_score, sign_diabetes_score, 
	      sign_phychosis_score, sign_old_score, sign_maternal_score, 
	      sign_children_score, sign_manage_score, public_health_hyper_score, 
	      public_health_diabetes_score, public_health_phychosis_score, 
	      public_health_old_score, public_health_maternal_score, 
	      public_health_children_score, public_health_score, 
	      health_manage_edu_score, health_manage_daily_activity_score, 
	      health_manage_assessment_score, health_manage_document_score, 
	      health_manage_score, customer_score, result_score, 
	      team_total, un_qualified_increment, qualified_increment, 
	      excellent_increment, month, create_time
	      )
	    values (#{orgId,jdbcType=VARCHAR}, #{signIncrement,jdbcType=INTEGER}, 
	      #{familyIncrement,jdbcType=INTEGER}, #{signHyperScore,jdbcType=DOUBLE}, #{signDiabetesScore,jdbcType=DOUBLE}, 
	      #{signPhychosisScore,jdbcType=DOUBLE}, #{signOldScore,jdbcType=DOUBLE}, #{signMaternalScore,jdbcType=DOUBLE}, 
	      #{signChildrenScore,jdbcType=DOUBLE}, #{signManageScore,jdbcType=DOUBLE}, #{publicHealthHyperScore,jdbcType=DOUBLE}, 
	      #{publicHealthDiabetesScore,jdbcType=DOUBLE}, #{publicHealthPhychosisScore,jdbcType=DOUBLE}, 
	      #{publicHealthOldScore,jdbcType=DOUBLE}, #{publicHealthMaternalScore,jdbcType=DOUBLE}, 
	      #{publicHealthChildrenScore,jdbcType=DOUBLE}, #{publicHealthScore,jdbcType=DOUBLE}, 
	      #{healthManageEduScore,jdbcType=DOUBLE}, #{healthManageDailyActivityScore,jdbcType=DOUBLE}, 
	      #{healthManageAssessmentScore,jdbcType=DOUBLE}, #{healthManageDocumentScore,jdbcType=DOUBLE}, 
	      #{healthManageScore,jdbcType=DOUBLE}, #{customerScore,jdbcType=DOUBLE}, #{resultScore,jdbcType=DOUBLE}, 
	      #{teamTotal,jdbcType=INTEGER}, #{unQualifiedIncrement,jdbcType=INTEGER}, #{qualifiedIncrement,jdbcType=INTEGER}, 
	      #{excellentIncrement,jdbcType=INTEGER}, #{month,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
	      )
	  </insert>
	  <!-- 更新数据 -->
	  <update id="update" parameterType="com.boco.modules.fdoc.model.score.AppraisalMonthOrgScoreEntity" >
	    update t_appraisal_month_org_score
	    <set >
	      <if test="orgId != null" >
	        org_id = #{orgId,jdbcType=VARCHAR},
	      </if>
	      <if test="signIncrement != null" >
	        sign_increment = #{signIncrement,jdbcType=INTEGER},
	      </if>
	      <if test="familyIncrement != null" >
	        family_increment = #{familyIncrement,jdbcType=INTEGER},
	      </if>
	      <if test="signHyperScore != null" >
	        sign_hyper_score = #{signHyperScore,jdbcType=DOUBLE},
	      </if>
	      <if test="signDiabetesScore != null" >
	        sign_diabetes_score = #{signDiabetesScore,jdbcType=DOUBLE},
	      </if>
	      <if test="signPhychosisScore != null" >
	        sign_phychosis_score = #{signPhychosisScore,jdbcType=DOUBLE},
	      </if>
	      <if test="signOldScore != null" >
	        sign_old_score = #{signOldScore,jdbcType=DOUBLE},
	      </if>
	      <if test="signMaternalScore != null" >
	        sign_maternal_score = #{signMaternalScore,jdbcType=DOUBLE},
	      </if>
	      <if test="signChildrenScore != null" >
	        sign_children_score = #{signChildrenScore,jdbcType=DOUBLE},
	      </if>
	      <if test="signManageScore != null" >
	        sign_manage_score = #{signManageScore,jdbcType=DOUBLE},
	      </if>
	      <if test="publicHealthHyperScore != null" >
	        public_health_hyper_score = #{publicHealthHyperScore,jdbcType=DOUBLE},
	      </if>
	      <if test="publicHealthDiabetesScore != null" >
	        public_health_diabetes_score = #{publicHealthDiabetesScore,jdbcType=DOUBLE},
	      </if>
	      <if test="publicHealthPhychosisSocre != null" >
	        public_health_phychosis_socre = #{publicHealthPhychosisSocre,jdbcType=DOUBLE},
	      </if>
	      <if test="publicHealthOldScore != null" >
	        public_health_old_score = #{publicHealthOldScore,jdbcType=DOUBLE},
	      </if>
	      <if test="publicHealthMaternalScore != null" >
	        public_health_maternal_score = #{publicHealthMaternalScore,jdbcType=DOUBLE},
	      </if>
	      <if test="publicHealthChildrenScore != null" >
	        public_health_children_score = #{publicHealthChildrenScore,jdbcType=DOUBLE},
	      </if>
	      <if test="publicHealthScore != null" >
	        public_health_score = #{publicHealthScore,jdbcType=DOUBLE},
	      </if>
	      <if test="healthManageEduScore != null" >
	        health_manage_edu_score = #{healthManageEduScore,jdbcType=DOUBLE},
	      </if>
	      <if test="healthManageDailyActivityScore != null" >
	        health_manage_daily_activity_score = #{healthManageDailyActivityScore,jdbcType=DOUBLE},
	      </if>
	      <if test="healthManageAssessmentScore != null" >
	        health_manage_assessment_score = #{healthManageAssessmentScore,jdbcType=DOUBLE},
	      </if>
	      <if test="healthManageDocumentScore != null" >
	        health_manage_document_score = #{healthManageDocumentScore,jdbcType=DOUBLE},
	      </if>
	      <if test="healthManageScore != null" >
	        health_manage_score = #{healthManageScore,jdbcType=DOUBLE},
	      </if>
	      <if test="customerScore != null" >
	        customer_score = #{customerScore,jdbcType=DOUBLE},
	      </if>
	      <if test="resultSocre != null" >
	        result_socre = #{resultSocre,jdbcType=DOUBLE},
	      </if>
	      <if test="teamTotal != null" >
	        team_total = #{teamTotal,jdbcType=INTEGER},
	      </if>
	      <if test="unQualifiedIncrement != null" >
	        un_qualified_increment = #{unQualifiedIncrement,jdbcType=INTEGER},
	      </if>
	      <if test="qualifiedIncrement != null" >
	        qualified_increment = #{qualifiedIncrement,jdbcType=INTEGER},
	      </if>
	      <if test="excellentIncrement != null" >
	        excellent_increment = #{excellentIncrement,jdbcType=INTEGER},
	      </if>
	      <if test="month != null" >
	        month = #{month,jdbcType=VARCHAR},
	      </if>
	      <if test="createTime != null" >
	        create_time = #{createTime,jdbcType=TIMESTAMP},
	      </if>
	    </set>
	    where id = #{id,jdbcType=INTEGER}
	  </update>
</mapper>